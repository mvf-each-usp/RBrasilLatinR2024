---
title: "A Comunidade \ `R Brasil` no Telegram "
subtitle: "![catioRinho -- imagem postada por ](img/catioRo.jpg){width=30%} ~2~"
authors:
  - first_name: Marcelo Ventura
    last_name: Freire
    email: mvf@usp.br
    country: br
    affiliation: "Escola de Artes, Ciências e Humanidades (EACHUSP)"
    url: ["https://t.me/rbrasiloficial", "https://github.com/mvf-each-usp"]
    corresponding: true
  - first_name: Leonardo Fernandes 
    last_name: Nascimento
    email: leofn3@gmail.com
    country: br
    affiliation: "Laboratório de Humanidades Digitais da UFBA (LABHDUFBA)"
    url: "https://github.com/leofn"
    corresponding: false
format: 
  revealjs:
    embed-resources: true
    toc: true
    # slideNumber: c/t
    code-fold: false
    center: true
    theme: white
    transition: slide
    slideNumber: true
    width: 1920
    height: 1080
    progress: true
    history: true
execute: 
  cache: true
  echo: false
  error: false
  warning: false
  message: false
  fig.width: 6
  fig.height: 4
  fig.retina: 2
  dev: png
  out.width: '100%'
  out.height: '100%'
  fig.align: 'center'
  fig.cap: 'center'
  fig.pos: 'H'
  fig.subcap: 'center'
  fig.asp: 1
  dpi: 96
  fig.show: 'hold'
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(plotly)

## ver se precisa mesmo destes pacotes ----
# library(abjutils)
# library(viridis)
```

# Sequência de slides a implementar

- R Brasil no Telegram
    - É *O* R Brasil ou é *A* R Brasil?
        - o *grupo* R Brasil do Telegram
        - a *comunidade* R Brasil de membros do grupo R Brasil
- O *Grupo* R Brasil
    - breve histórico
        - grupo criado no Telegram por Felipe Barros em 5 de fevereiro de 2017
    - números rápidos em 25/08/2024   <---- atualizar!
        - 170190 mensagens postadas
        - 13810 links compartilhados
        - 7274 fotos
        - 2758 dias de existência e crescendo
        - 2266 membros atuais
        - 697 arquivos
        - 78 videos
        - 65 mensagens de voz
        - 13 admins
        - 1 servidor no discord de backup para "emergências"  ;)
    - evolução do grupo ao longo do tempo
        - número de membros
        - número de mensagens
    - objetivos do grupo
        - compartilhar conhecimento
        - tirar dúvidas
        - colocar pessoas em contato
        - abrir portas
- A *Comunidade* R Brasil
    - diversidade de formações 
        - biólogos, ecologistas
        - computeiros, estatísticos, matemáticos
        - advogados, jurimestristas
        - geógrafos, geólogos, gestores ambientais
        - médicos, psicólogos, psicometristas
        - mercadólogos, administradores, economistas
        - engenheiros
        - jornalistas
        - entre outras
    - diversidade de atuações 
        - profissionais e estudantes
        - setor público, setor privado e terceiro setor
        - profissionais e pesquisadores acadêmicos
        - freelancers, empregados e empreendedores
    - diversidade de interesses
        - interesses específicos: programação em R
            - apresentações de dúvidas e dificuldades com código
            - pedidos de colaboração em código e repositórios
            - sugestões, brainstormings e "solution racings"
        - interesses circundantes: o que afeta e é afetado pelo uso do R
            - modelagem e análise de dados
            - métodos estatísticos, técnicas de machine learning etc.
            - manuseio de dados
            - tecnologias para big data
            - visualização de dados e dashboard
            - raspagem e mineiração de dados
            - desenvolvimento de pacotes
            - ciência de dados e soluções integrativas
            - comparativos de aspectos com outras linguagens
            - interações do R com sistemas operacionais
            - portabilidade de dados entre plataformas e na internet
        - interesses em aplicações específicas: onde o R pode ser usado
            - jurimetria
            - dados ambientais
            - dados georreferenciados
            - dados abertos e transparência pública
            - jornalismo de dados
            - negócios
            - entre outros
        - divulgação: onde, quando e como o R pode te alavancar
            - vagas e oportunidades
            - cursos sobre R e afins
    - diversidade de localização
        - membros originários do Brasil inteiro
        - também há vários portugueses na R Brasil
        - há vários membros localizados fora do Brasil
- Resultados das interações entre os membros da R Brasil
    - alguns grupos surgidos da R Brasil 
        - Web-scraping Brasil (<https://t.me/+Z4d0O-ZQXsQyNDJk>)
        - Bio-R
        - Shiny Brasil (<https://t.me/shinybrasi>)
    - iniciativas que surgiram de membros que se conheceram na R Brasil
        - Dadoscope
            - <https://github.com/dadoscope>
            - <https://revistaforum.com.br/opiniao/2019/7/10/dadoscope-novo-blog-na-forum-traz-jornalismo-de-dados-58299.html>
        - diversas colaborações em freelance
        - várias colaborações acadêmica
        - algumas startups
        - entre outras
- Lições aprendidas ao longo dos anos
    1. o aprendizado da linguagem está diretamente conectado com a relação afetiva que você vai estabelecer com a comunidade dessa linguagem, e não somente com a linguagem em si e suas características, méritos e deméritos
        - o aprendizado da linguagem é apenas um aspecto de um aprendizado maior, que é o aprendizado da cultura da linguagem, da cultura da análise de dados e das tecnologias nela envolvidas, da cultura do debate 
        - quem já está imerso nessa cultura já a incorporou, mas a pessoa que está começando a entrar nessa cultura através do aprendizado de uma linguagem (como o R) não sabe exatamente o que pode falar num grupo novo, o que é complexo e o que é simples na linguagem e na cultura subjacente
        - nesse sentido, nossa comunidade é acolhedora, pois deixamos as pessoas falarem, discutimos e, quando é o caso, quem tem mais experiência propões orientação para quem apresenta suas dúvidas
    2. a importância de ter uma comunidade para o aprendizado da linguagem
        - essas comunidades não desempenham o mesmo papel que a documentação da linguagem, que um fórum técnico como o Stack Overflow ou que uma ferramenta como o ChatGPT, 
    3. a necessidade e importância de estabelecer parâmetros relacionais e limites para cuidar dessa comunidade e manter uma ordem que permita ela funcionar sem sufocar nem a dinâmica do convívio e nem as troca de experiências e de informações entre seus membros
        - políticas estritas de respeito e convívio
        - nesse sentido, uma lição importante foi a escolha pela liberalidade nas discussões no grupo, que seria brutalmente diminuída se o corpo de admins utilizasse políticas estritas de off-topic
        - na R Brasil, as discussões frequentemente realizam longas incursões para fora do R com tranquilidade e naturalidade, a ponto de um membro da comunidade precisar fazer muita força para receber uma carimbada de off-topic por parte dos admins

- Para entrar no grupo
    - grupo aberto, então o acesso é livre
    - captcha
    - <https://t.me/rbrasiloficial>




#  AQUI!!!!!!!!!!!!!!!!!  


AQUI COMEÇAM OS SLIDES DE VERDADE


# R Brasil no Telegram

## É *O* R Brasil ou é *A* R Brasil?
        - o *grupo* R Brasil do Telegram
        - a *comunidade* R Brasil de membros do grupo R Brasil

# O *Grupo* R Brasil

## Breve Histórico
        - grupo criado no Telegram por Felipe Barros em 5 de fevereiro de 2017
## Números Rápidos 

Em 25/08/2024
        - 170190 mensagens postadas
        - 13810 links compartilhados
        - 7274 fotos
        - 2758 dias de existência e crescendo
        - 2266 membros atuais
        - 697 arquivos
        - 78 videos
        - 65 mensagens de voz
        - 13 admins
        - 1 servidor no discord de backup para "emergências"  ;)

## evolução do grupo ao longo do tempo
        - número de membros
        - número de mensagens
## objetivos do grupo
        - compartilhar conhecimento
        - tirar dúvidas
        - colocar pessoas em contato
        - abrir portas


# A *Comunidade* R Brasil
## diversidade de formações 
        - biólogos, ecologistas
        - computeiros, estatísticos, matemáticos
        - advogados, jurimestristas
        - geógrafos, geólogos, gestores ambientais
        - médicos, psicólogos, psicometristas
        - mercadólogos, administradores, economistas
        - engenheiros
        - jornalistas
        - entre outras
## diversidade de atuações 
        - profissionais e estudantes
        - setor público, setor privado e terceiro setor
        - profissionais e pesquisadores acadêmicos
        - freelancers, empregados e empreendedores
## diversidade de interesses
        - interesses específicos: programação em R
            - apresentações de dúvidas e dificuldades com código
            - pedidos de colaboração em código e repositórios
            - sugestões, brainstormings e "solution racings"
        - interesses circundantes: o que afeta e é afetado pelo uso do R
            - modelagem e análise de dados
            - métodos estatísticos, técnicas de machine learning etc.
            - manuseio de dados
            - tecnologias para big data
            - visualização de dados e dashboard
            - raspagem e mineiração de dados
            - desenvolvimento de pacotes
            - ciência de dados e soluções integrativas
            - comparativos de aspectos com outras linguagens
            - interações do R com sistemas operacionais
            - portabilidade de dados entre plataformas e na internet
        - interesses em aplicações específicas: onde o R pode ser usado
            - jurimetria
            - dados ambientais
            - dados georreferenciados
            - dados abertos e transparência pública
            - jornalismo de dados
            - negócios
            - entre outros
        - divulgação: onde, quando e como o R pode te alavancar
            - vagas e oportunidades
            - cursos sobre R e afins
## diversidade de localização
        - membros originários do Brasil inteiro
        - também há vários portugueses na R Brasil
        - há vários membros localizados fora do Brasil
# Resultados das interações entre os membros da R Brasil
## alguns grupos surgidos da R Brasil 
        - Web-scraping Brasil (<https://t.me/+Z4d0O-ZQXsQyNDJk>)
        - Bio-R
        - Shiny Brasil (<https://t.me/shinybrasi>)
## iniciativas que surgiram de membros que se conheceram na R Brasil
        - Dadoscope
            - <https://github.com/dadoscope>
            - <https://revistaforum.com.br/opiniao/2019/7/10/dadoscope-novo-blog-na-forum-traz-jornalismo-de-dados-58299.html>
        - diversas colaborações em freelance
        - várias colaborações acadêmica
        - algumas startups
        - entre outras
# Lições aprendidas ao longo dos anos
    1. o aprendizado da linguagem está diretamente conectado com a relação afetiva que você vai estabelecer com a comunidade dessa linguagem, e não somente com a linguagem em si e suas características, méritos e deméritos
        - o aprendizado da linguagem é apenas um aspecto de um aprendizado maior, que é o aprendizado da cultura da linguagem, da cultura da análise de dados e das tecnologias nela envolvidas, da cultura do debate 
        - quem já está imerso nessa cultura já a incorporou, mas a pessoa que está começando a entrar nessa cultura através do aprendizado de uma linguagem (como o R) não sabe exatamente o que pode falar num grupo novo, o que é complexo e o que é simples na linguagem e na cultura subjacente
        - nesse sentido, nossa comunidade é acolhedora, pois deixamos as pessoas falarem, discutimos e, quando é o caso, quem tem mais experiência propões orientação para quem apresenta suas dúvidas
    2. a importância de ter uma comunidade para o aprendizado da linguagem
        - essas comunidades não desempenham o mesmo papel que a documentação da linguagem, que um fórum técnico como o Stack Overflow ou que uma ferramenta como o ChatGPT, 
    3. a necessidade e importância de estabelecer parâmetros relacionais e limites para cuidar dessa comunidade e manter uma ordem que permita ela funcionar sem sufocar nem a dinâmica do convívio e nem as troca de experiências e de informações entre seus membros
        - políticas estritas de respeito e convívio
        - nesse sentido, uma lição importante foi a escolha pela liberalidade nas discussões no grupo, que seria brutalmente diminuída se o corpo de admins utilizasse políticas estritas de off-topic
        - na R Brasil, as discussões frequentemente realizam longas incursões para fora do R com tranquilidade e naturalidade, a ponto de um membro da comunidade precisar fazer muita força para receber uma carimbada de off-topic por parte dos admins

# Para entrar no grupo

## É só entrar?

Sim:

- grupo aberto, então o acesso é livre
- só tem que pelo captcha da Rose, o nosso bot anti-bots

## Onde então?

<https://t.me/rbrasiloficial>






# AQUI!!!!!!!   -->  Reciclar

## Exploração Preliminar da Raspagem da Troca de Mensagens do Grupo


```{r}
#| label: monta-tabelas

# carrega a raspagem ----
raspagem <- 
  readRDS("./data/raspagem.rds") |> 
  group_split(tipo) 
## e já separa em três grupos pelo tipo: entrada, postagem e service
names(raspagem) <- map_chr(raspagem, \(tab) tab$tipo[1])
sapply(raspagem, nrow)
```


```{r}
#| label: graficos-top-15-users

plot1 <- 
  raspagem$postagem |> 
  # filter(autor != "Deleted Account") |> 
  group_by(autor) |>
  summarize(n = n()) |>
  ungroup() |>
  top_n(15, n) |>
  mutate(autor = reorder(autor, -n)) |> 
  ggplot() +
  aes(x = autor, y = n, fill = factor(autor)) +
  geom_bar(stat = "identity", color = 'black', size = 0.2) + # Black border for contrast
  xlab("") +  # Custom label
  ylab("") +
  ggtitle("Top 15 Usuários do Telegram R-Brasil por Total de Mensagens") +
  coord_flip() +
  scale_fill_viridis_d(option = "viridis") +  # Apply the viridis color palette
  theme_void(base_size = 15) +  # Clean theme with increased base font size
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Center and bold title
    axis.title.x = element_text(face = "bold", size = 14),  # Bold X axis label
    axis.title.y = element_text(face = "bold", size = 14),  # Bold Y axis label
    axis.text.x = element_text(size = 12),  # Size of X axis text
    axis.text.y = element_text(size = 12),  # Size of Y axis text
    panel.grid.major.y = element_blank(),  # Remove major gridlines on Y axis
    panel.grid.minor.y = element_blank(),  # Remove minor gridlines on Y axis
    panel.grid.major.x = element_line(color = "gray", linewidth = 0.5),  # Light gridlines on X axis
    legend.position = "none"  # Hide legend to focus on bar colors
  )
# Convert the ggplot to a Plotly plot
plotly_plot1 <- ggplotly(plot1)
# Display the Plotly plot
plotly_plot1
```


```{r}
#| label: graficos-total-mensagens

plot2 <- 
  raspagem$postagem |> 
  mutate(mes = data_hora |> floor_date("month")) |>
  count(mes) |>
  ggplot(aes(x = mes, y = n)) +
  geom_line(color = "darkblue", size = 1) +  # Line color and thickness
  geom_point(color = "darkred", size = 3) +  # Point color and size
  xlab("") +
  ylab("") +
  ggtitle("Total de mensagens no Telegram do R-Brasil") +
  theme_gray(base_size = 16)  # Apply the gray theme with a base font size

# Convert the ggplot to a Plotly plot
plotly_plot2 <- ggplotly(plot2)

# Display the Plotly plot
plotly_plot2
```


```{r}
#| label: graficos-total-mensagens-user

raspagem$postagem |>
  filter(autor != "Deleted Account") |>
  mutate(
    autor = autor |> fct_lump(12) |> as.character(),
    mes = data_hora |> floor_date("month")
  ) |>
  filter(autor != "Other") |>
  count(mes, autor, sort = TRUE) |>
  complete(mes, autor, fill = list(n = 0)) |>
  ggplot(aes(x = mes, y = n)) +
  geom_line() +
  facet_wrap(~autor) +
  labs(x = "Mês", y = "Quantidade de mensagens") +
  ggtitle("Frequência de mensagens por usário no R-Brasil")+
  theme_bw()
```


```{r}
#| label: graficos-hora-interagimos

raspagem$postagem |>
  mutate(hora = data_hora |> hour() |> factor()) |>
  ggplot(aes(x = hora)) +
  geom_bar(fill = "royalblue") +
  theme_minimal(14) +
  ylab("Número de Mensagens")+
  ggtitle("Hora das mensagens no Telegram do R-Brasil")
```


```{r}
#| label: graficos-dia-semana

raspagem$postagem |>
  mutate(wd = data_hora |> wday(label = TRUE)) |>
  ggplot(aes(x = wd)) +
  geom_bar(fill = "blue") +
  theme_minimal(14) +
  ylab("Dia da semana")+
  ggtitle("Dia da semana das mensagens")
```


```{r}
#| label: prepara-graficos-wordcloud

# dá pra criar funções anônimas assim ;)
# esse é um limpador bem safado que fiz em 1 min
limpar <- 
  \(x) 
  abjutils::rm_accent(x) |>
  str_to_title() |>
  str_remove_all("[^a-zA-Z0-9 ]") |>
  str_remove_all("Pra") |>
  str_squish()

# wordcloud ---- 
# tirar palavras que nao quero 
banned <- 
  tidytext::get_stopwords("pt") |>
  mutate(palavra = limpar(word))

cores <- viridis::viridis(10, begin = 0, end = 0.8)
```


```{r}
#| label: graficos-wordcloud

raspagem$postagem |>
  tidytext::unnest_tokens(palavra, texto) |>
  mutate(palavra = limpar(palavra)) |>
  anti_join(banned, "palavra") |>
  count(palavra, sort = TRUE) |>
  with(
    wordcloud::wordcloud(
      palavra, 
      n, 
      scale = c(5, .1),
      min.freq = 80, random.order = FALSE,
      colors = cores
    )
  )
```




# AQUI !!!!!!!!!!!  TO-DO LIST

- fazer um histórico breve do grupo
    - ver se dá para levantar dados históricos da evolução do grupo, como 
        - evolução do número de membros
        - evolução do número de mensagens
- ver como aproveitar os dois scripts do Koselleck na 
  [Seção *Scripts do Koselleck*](Scripts-do-Koselleck)
- ver se ainda há algo a aproveitar no script do Trecenti na 
  [Seção](Scripts do Trecenti)
    - incluir referência ao [trabalho do Trecenti sobre a R Brasil](https://blog.curso-r.com/posts/2019-09-10-rbrasil/)
- ver se tem algo que dê pra aproveitar da [minha participação sobre comunidades na SatRday 2019](https://saopaulo2019.satrdays.org/)
    - não, não tem o que aproveitar: foi uma roda de conversa e não preparei nenhum material ou apresentação
    - só tenho material da apresentação sobre R Markdown
    - a o que falei da R Brasil foi só falado =/
- tópicos a mencionar
    - histórico do grupo
    - interesses do grupo
    - composição do grupo
    - ??? o quê mais?
        - minha pergunta mais respostas do Charles no `rbrasil-admins`
            - Gente, será que dá para fazer animação de word cloud? Se tem algum jeito de gerar word cloud com alguma forma de continuidade no posicionamento das palavras ao longo do tempo?
            - Se existe uma maneira, o craque da posição ( @Koselleck ) saberá
            - <https://stackoverflow.com/questions/61132650/is-there-a-way-to-animate-a-word-cloud-in-r>
            - e um bar-chart-race? como isso aqui:
              <https://github.com/corydonbaylor/barchart-race>
        - sugestão do [Marcus](https://t.me/marcusvvl)
            - usar a imagem do cachorro como capa do trabalho  
            ![catioRinho](img/catioRo.jpg)
        - sugestões do [Charles Santana](https://t.me/BrownSantana): 
            - Seria legal dar uma amostra das iniciativas que surgiram a partir do R-Brasil. Por exemplo, alguns grupos foram formados por pessoas interessadas em diferentes nichos, cito alguns:
                a) Web-scraping Brasil (https://t.me/+Z4d0O-ZQXsQyNDJk)
                b) Bio-R
                c) Shiny Brasil (https://t.me/shinybrasil)
                d) Dadoscope (https://revistaforum.com.br/opiniao/2019/7/10/dadoscope-novo-blog-na-forum-traz-jornalismo-de-dados-58299.html)
                e) BIT Analytics (startup criada por Tarssio e Italo com a colaboração de @Koselleck)
                f) Inúmeras colaborações em formato freelance em conjunto entre membros do grupo que mal se conhecem em pessoa (só eu já trabalhei com Tarssio, @oMarceloVentura , Marcelo Ventura -- o outro, com Neto Ferraz, @Koselleck, @FBarbalho, Arles e muitos conhecidos destas pessoas de 2017 até agora)
            - Seria legal também identificar o volume de novos membros por dia/mes/ano... se não for possível identificar essa informação com o R podíamos usar o bot do telegram mesmo. Vou procurar aqui
            - Por fim, acho que o mais importante é definir que história queremos contar. Queremos mostrar uma foto/perfil do R-Brasil? Queremos contar a História/Evolução do R-Brasil? 
            - Em qualquer gráfico que fale sobre o horário das mensagens, seria bom deixar claro de qual fuso-horário aquela mensagem se refere. Fuso horário do Brasil? UTC? Não sei na verdade qual é o fuso.
        - sugestões do [Adriano Mello](https://t.me/asmshark)
            - Uma comparação com o StackOverFlow seria bem legal. O grupo aqui é bem mais acessível e receptivo em comparação.



## Scripts do Koselleck

Reciclar depois: copy-pasta dos scripts do Koselleck


### script `etl.R`

```{r}
#| label: etl.R
#| eval: false
# lib
library(lubridate)
library(magrittr)
library(ggplot2)
library(tidyverse)
library(tidytext)
####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
#### Read exported messages of Telegram  ##############
####$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
parser_telegram <- function(html_file) {
  # pega todas as mensagens
  divs <- xml2::read_html(html_file) |>
    xml2::xml_find_all("//div[@class='message default clearfix']")
  # nome da pessoa
  nomes <- divs |>
    xml2::xml_find_all("./div/div[@class='from_name']") |>
    xml2::xml_text() |>
    stringr::str_squish()
  # data e hora da mensagem
  data_horas <- divs |>
    xml2::xml_find_all("./div/div[@class='pull_right date details']") |>
    xml2::xml_attr("title") |>
    lubridate::dmy_hms()
  # texto da mensagem
  textos <- divs |>
    purrr::map(xml2::xml_find_first, "./div/div[@class='text']") |>
    purrr::map_chr(xml2::xml_text) |>
    stringr::str_squish()
  # retorna numa tabela
  tibble::tibble(
    data_hora = data_horas,
    nome = nomes,
    texto = textos
  )
}

## path (deletei os dados para nao ocupar mem do github)
path <- "./raw/ChatExport_2024-08-18/"

### list de arquivos com as msgs
messages <- fs::dir_ls(path, regexp = "messages")

### df 05-01-2021
df <- purrr::map_dfr(
  messages,
  parser_telegram,
  .id = "arquivo")
########## rds
saveRDS("df", file = "./data/df.rds")

```

### script `plots.R`

```{r}
#| label: plots.R
#| eval: false
# remove and clean
# rm(list=ls())
gc()
# lib
library(tidyverse)
library(plotly)
library(dplyr)
library(viridis)
### load data

df <- readRDS("./data/df.rds")

# Summarize the data and filter for top 15 users
plot1 <- df |>
  group_by(nome) |>
  summarize(n = n()) |>
  ungroup() |>
  top_n(15, n) |>
  ggplot(aes(x=reorder(nome, -n), y=n, fill=factor(nome))) +
  geom_bar(stat = "identity", color='black', size=0.2) +  # Black border for contrast
  xlab("") +  # Custom label
  ylab("") +
  ggtitle("Top 15 Usuários do Telegram R-Brasil por Total de Mensagens") +
  coord_flip() +
  scale_fill_viridis_d(option = "viridis") +  # Apply the viridis color palette
  theme_void(base_size = 15) +  # Clean theme with increased base font size
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 18),  # Center and bold title
    axis.title.x = element_text(face = "bold", size = 14),  # Bold X axis label
    axis.title.y = element_text(face = "bold", size = 14),  # Bold Y axis label
    axis.text.x = element_text(size = 12),  # Size of X axis text
    axis.text.y = element_text(size = 12),  # Size of Y axis text
    panel.grid.major.y = element_blank(),  # Remove major gridlines on Y axis
    panel.grid.minor.y = element_blank(),  # Remove minor gridlines on Y axis
    panel.grid.major.x = element_line(color = "gray", size = 0.5),  # Light gridlines on X axis
    legend.position = "none"  # Hide legend to focus on bar colors
  )

# Convert the ggplot to a Plotly plot
plotly_plot <- ggplotly(plot1)

# Display the Plotly plot
plotly_plot


## Total de mensagens ao longo do tempo

plot2 <- df |>
  dplyr::mutate(mes = lubridate::floor_date(data_hora, "month")) |>
  dplyr::count(mes) |>
  ggplot(aes(x = mes, y = n)) +
  geom_line(color = "darkblue", size = 1) +  # Line color and thickness
  geom_point(color = "darkred", size = 3) +  # Point color and size
  xlab("") +
  ylab("") +
  ggtitle("Total de mensagens no Telegram do R-Brasil") +
  theme_gray(base_size = 16)  # Apply the gray theme with a base font size

# Convert the ggplot to a Plotly plot
plotly_plot2 <- ggplotly(plot2)

# Display the Plotly plot
plotly_plot2

### total de mensagens por user ao longo do tempo
df |>
  dplyr::filter(nome != "Deleted Account") |>
  dplyr::mutate(nome = forcats::fct_lump(nome, 12),
                nome = as.character(nome),
                mes = lubridate::floor_date(data_hora, "month")) |>
  dplyr::filter(nome != "Other") |>
  dplyr::count(mes, nome, sort = TRUE) |>
  tidyr::complete(mes, nome, fill = list(n = 0)) |>
  ggplot(aes(x = mes, y = n)) +
  geom_line() +
  facet_wrap(~nome) +
  labs(x = "Mês", y = "Quantidade de mensagens") +
  ggtitle("Frequência de mensagens por usário no R-Brasil")+
  theme_bw()

## hora que mais interagimos

df |>
  dplyr::mutate(hora = factor(lubridate::hour(data_hora))) |>
  ggplot(aes(x = hora)) +
  geom_bar(fill = "royalblue") +
  theme_minimal(14) +
  ylab("Número de Mensagens")+
  ggtitle("Hora das mensagens no Telegram do R-Brasil")


## o dia da semana

df |>
  dplyr::mutate(wd = lubridate::wday(data_hora, label = TRUE)) |>
  ggplot(aes(x = wd)) +
  geom_bar(fill = "blue") +
  theme_minimal(14) +
  ylab("Dia da semana")+
  ggtitle("Dia da semana das mensagens")


# dá pra criar funções anônimas assim ;)
# esse é um limpador bem safado que fiz em 1 min
limpar <- . |>
  abjutils::rm_accent() |>
  stringr::str_to_title() |>
  stringr::str_remove_all("[^a-zA-Z0-9 ]") |>
  stringr::str_remove_all("Pra") |>
  stringr::str_squish()
library('abjutils')
# tirar palavras que nao quero
banned <- tidytext::get_stopwords("pt") |>
  dplyr::mutate(palavra = limpar(word))

cores <- viridis::viridis(10, begin = 0, end = 0.8)

df |>
  tidytext::unnest_tokens(palavra, texto) |>
  dplyr::mutate(palavra = limpar(palavra)) |>
  dplyr::anti_join(banned, "palavra") |>
  dplyr::count(palavra, sort = TRUE) |>
  with(wordcloud::wordcloud(
    palavra, n, scale = c(5, .1),
    min.freq = 80, random.order = FALSE,
    colors = cores
  ))

```



## Scripts do Trecenti

Reciclar depois: copy-pasta do script do Trecenti disponibilizado na 
[página do curso-r](https://blog.curso-r.com/posts/2019-09-10-rbrasil/)

```{r}
#| eval: false
library(magrittr)

ler_html_telegram <- function(html_file) {
  # pega todas as mensagens
  divs <- xml2::read_html(html_file) |> 
    xml2::xml_find_all("//div[@class='message default clearfix']")
  
  # nome da pessoa
  nomes <- divs |> 
    xml2::xml_find_all("./div/div[@class='from_name']") |> 
    xml2::xml_text() |> 
    stringr::str_squish()
  
  # data e hora da mensagem
  data_horas <- divs |> 
    xml2::xml_find_all("./div/div[@class='pull_right date details']") |> 
    xml2::xml_attr("title") |> 
    lubridate::dmy_hms()
  
  # texto da mensagem
  textos <- divs |> 
    purrr::map(xml2::xml_find_first, "./div/div[@class='text']") |> 
    purrr::map_chr(xml2::xml_text) |> 
    stringr::str_squish()
  
  # retorna numa tabela
  tibble::tibble(
    data_hora = data_horas,
    nome = nomes,
    texto = textos
  )
}
```

```{r}
#| eval: false
path <- "~/Downloads/Telegram Desktop/ChatExport_17_08_2019/"
todos_arquivos <- fs::dir_ls(path, regexp = "messages")

d_msg <- purrr::map_dfr(
  todos_arquivos, 
  ler_html_telegram, 
  .id = "arquivo"
)
```

```{r}
#| eval: false
d_msg |> 
  dplyr::count(nome, sort = TRUE) |> 
  dplyr::mutate(prop = scales::percent(n/sum(n))) |> 
  head(10) |> 
  knitr::kable()
```

```{r}
#| eval: false
library(ggplot2)
d_msg |> 
  dplyr::mutate(mes = lubridate::floor_date(data_hora, "month")) |> 
  dplyr::count(mes) |> 
  ggplot(aes(x = mes, y = n)) +
  geom_line() +
  geom_point() +
  theme_minimal(16)
```

```{r}
#| eval: false
d_msg |> 
  dplyr::filter(nome != "Deleted Account") |> 
  dplyr::mutate(nome = forcats::fct_lump(nome, 12),
                nome = as.character(nome),
                mes = lubridate::floor_date(data_hora, "month")) |> 
  dplyr::filter(nome != "Other") |> 
  dplyr::count(mes, nome, sort = TRUE) |> 
  tidyr::complete(mes, nome, fill = list(n = 0)) |> 
  ggplot(aes(x = mes, y = n)) +
  geom_line() +
  facet_wrap(~nome) +
  labs(x = "Mês", y = "Quantidade de mensagens") +
  theme_bw()
```

```{r}
#| eval: false
d_msg |> 
  dplyr::mutate(hora = factor(lubridate::hour(data_hora))) |> 
  ggplot(aes(x = hora)) +
  geom_bar(fill = "royalblue") +
  theme_minimal(14) +
  ggtitle("Hora das mensagens")
```

```{r}
#| eval: false
d_msg |> 
  dplyr::mutate(wd = lubridate::wday(data_hora, label = TRUE)) |> 
  ggplot(aes(x = wd)) +
  geom_bar(fill = "pink2") +
  theme_minimal(14) +
  ggtitle("Dia da semana das mensagens")
```

```{r}
#| eval: false
# dá pra criar funções anônimas assim ;)
# esse é um limpador bem safado que fiz em 1 min
limpar <- . |> 
  abjutils::rm_accent() |> 
  stringr::str_to_title() |> 
  stringr::str_remove_all("[^a-zA-Z0-9 ]") |> 
  stringr::str_squish()

# tirar palavras que nao quero
banned <- tidytext::get_stopwords("pt") |> 
  dplyr::mutate(palavra = limpar(word))

cores <- viridis::viridis(10, begin = 0, end = 0.8)

d_msg |> 
  tidytext::unnest_tokens(palavra, texto) |> 
  dplyr::mutate(palavra = limpar(palavra)) |> 
  dplyr::anti_join(banned, "palavra") |> 
  dplyr::count(palavra, sort = TRUE) |> 
  with(wordcloud::wordcloud(
    palavra, n, scale = c(5, .1), 
    min.freq = 80, random.order = FALSE,
    colors = cores
  ))
```



